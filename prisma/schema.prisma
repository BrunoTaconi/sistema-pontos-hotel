generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id              Int         @id @default(autoincrement())
  nome            String
  email           String      @unique
  tipoDocumento   String
  numeroDocumento String
  hashSenha       String
  telefone        String
  criadoEm        DateTime    @default(now())
  hierarquia      Hierarquia  @default(usuario)
  saldoPontos     Int         @default(0)
  resgates        Resgate[]
  transacoes      Transacao[]
  limiteConvites  Int         @default(5) // ðŸ”¹ total de convites permitidos
  usosConvite     Int         @default(0)

  codigoConvite String? @unique

  convitesFeitos Convite[] @relation("ConvitesFeitos")
  convitesUsados Convite[] @relation("ConvitesUsados")
}

model Convite {
  id            Int      @id @default(autoincrement())
  idConvidante  Int?
  idConvidado   Int?
  codigoConvite String
  criadoEm      DateTime @default(now())

  convidante Usuario? @relation("ConvitesFeitos", fields: [idConvidante], references: [id], onDelete: Cascade)
  convidado  Usuario? @relation("ConvitesUsados", fields: [idConvidado], references: [id])
}

model Transacao {
  id        Int           @id @default(autoincrement())
  idUsuario Int
  pontos    Int
  tipo      TipoTransacao
  criadoEm  DateTime      @default(now())
  usuario   Usuario       @relation(fields: [idUsuario], references: [id], onDelete: Cascade)
}

model Recompensa {
  id        Int       @id @default(autoincrement())
  nome      String
  descricao String
  custo     Int
  ativo     Boolean   @default(true)
  criadoEm  DateTime  @default(now())
  imagem    String?
  resgates  Resgate[]
}

model Resgate {
  id           Int        @id @default(autoincrement())
  idUsuario    Int
  idRecompensa Int
  criadoEm     DateTime   @default(now())
  recompensa   Recompensa @relation(fields: [idRecompensa], references: [id], onDelete: Cascade)
  usuario      Usuario    @relation(fields: [idUsuario], references: [id], onDelete: Cascade)
}

enum Hierarquia {
  usuario
  admin
}

enum TipoTransacao {
  ganho
  resgate
}
